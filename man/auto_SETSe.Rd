% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto_SETSe.R
\name{auto_SETSe}
\alias{auto_SETSe}
\title{Auto SETSe}
\usage{
auto_SETSe(g, force = "net_generation", flow = "power_flow",
  distance = "distance", capacity = "capacity",
  edge_name = "edge_name", k = "k", tstep = 0.02, mass = 1,
  max_iter = 1e+05, tol = 0.002, sparse = FALSE, hyper_iters = 100,
  hyper_tol = 0.01, hyper_max = 30000, step_size = 0.1, sample = 1,
  verbose = FALSE)
}
\arguments{
\item{g}{An igraph object}

\item{force}{A character string. This is the node attribute that contains the force the nodes exert on the network.}

\item{flow}{A character string. This is the edge attribute that is the power flow on the edges.}

\item{distance}{A character string. The edge attribute that contains the original/horizontal distance between nodes.}

\item{capacity}{A character string. This is the edge attribute that is the flow limit of the edges.}

\item{edge_name}{A character string. This is the edge attribute that contains the edge_name of the edges.}

\item{k}{A character string. This is k for the moment don't change it.}

\item{tstep}{A numeric. The time interval used to iterate through the network dynamics.}

\item{mass}{A numeric. This is the mass constant of the nodes in normalised networks this is set to 1.}

\item{max_iter}{An integer. The maximum number of iterations before stopping. Larger networks usually need more iterations.}

\item{tol}{A numeric. The tolerance factor for early stopping.}

\item{sparse}{Logical. Whether or not the function should be run using sparse matrices. must match the actual matrix, this could prob be automated}

\item{hyper_iters}{integer. The hyper parameter that determines the number of iterations allowed to find an acceptable convergence value.}

\item{hyper_tol}{numeric. The convergence tolerance when trying to find the minimum value}

\item{hyper_max}{integer. The maximum number of iterations that the setse will go through whilst searching for the minimum.}

\item{step_size}{numeric. The hyper parameter that determines the log ratio search step size for auto convergence}

\item{sample}{Integer. The dynamics will be stored only if the iteration number is a multiple of the sample. 
This can greatly reduce the size of the results file for large numbers of iterations. Must be a multiple of the max_iter}
}
\value{
A list of four elements. A data frame with the height embeddings of the network, a data frame of the edge embeddings, 
the convergence dynamics dataframe for the network as well as the search history for convergence criteria of the network
}
\description{
Uses a grid search and a binary search to find appropriate convergence conditions.
}
\details{
This function is pretty useful, it takes advantage of the linear relationship between the timestep and the coefficient of drag
to search along the log linear line formed by tstep/coef_drag to find the convergence conditions.
}
