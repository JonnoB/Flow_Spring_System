% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SETSe_core.R
\name{SETSe_core}
\alias{SETSe_core}
\title{SETSe Core}
\usage{
SETSe_core(
  node_embeddings,
  ten_mat,
  non_empty_matrix,
  kvect,
  dvect,
  mass,
  tstep,
  max_iter = 1000,
  coef_drag = 1,
  tol = 0.002,
  sparse = FALSE,
  sample = 1,
  static_limit = NULL
)
}
\arguments{
\item{node_embeddings}{A data frame The current dynamics and forces experienced by the node a data frame.}

\item{ten_mat}{A data frame The current dynamics and forces experienced by the node a data frame.}

\item{non_empty_matrix}{A numeric matrix. contains the index of the non-empty cells in the adjacency matrix. see details.}

\item{kvect}{A numeric vector of the spring stiffnesses}

\item{dvect}{A numeric vector of the initial distances between the nodes}

\item{mass}{A numeric. This is the mass constant of the nodes in normalised networks this is set to 1.}

\item{tstep}{A numeric value. The time step, measured in seconds, that will be used to calculate the new dynamic state}

\item{max_iter}{An integer. The maximum number of iterations before stopping. Larger networks usually need more iterations.}

\item{coef_drag}{A numeric value. Used to set a multiplier on the friction value. This is usualy determined by auto_SETSe}

\item{tol}{A numeric. The tolerance factor for early stopping.}

\item{sparse}{Logical. Whether or not the function should be run using sparse matrices. must match the actual matrix, this could prob be automated}

\item{sample}{Integer. The dynamics will be stored only if the iteration number is a multiple of the sample. 
This can greatly reduce the size of the results file for large numbers of iterations. Must be a multiple of the max_iter}

\item{static_limit}{Numeric. The maximum value the static force can reach before the algorithm terminates early. This
prevents calculation in a diverging system. The value should be set to some multiple greater than one of the force in the system.
If left blank the static limit is the system absolute mean force.}
}
\value{
A list of three dataframes
\enumerate{
  \item The network dynamics describing several key figures of the network during the convergence process, this includes the static_force
  \item The node embeddings. Includes all data on the nodes the forces exerted on them position and dynamics at simulation termination
  \item A data frame giving the time taken for the simulation as well as the number of nodes and edges. Node and edge data is given
  as this may differ from the total number of nodes and edges in the network depending on the method used for convergnence.
  For example if SETSe_bicomp is used then some simulations may contain as little as two nodes and 1 edge
}
}
\description{
This is the SETse core algorithm. It runs the SETSe model to find the equilibrium position of the network
}
\details{
This function is usally run inside a more easy to use function such as The SETSe function, SETse_bicomp or auto_SETSe. These
wrapper functions make the application of the SETse algorithm more straight foreword. However, this function is included
for completeness and to allow ground up experiments

The non_empty matrix contains the row, column position and absolute index and transpose index of the edges in the matrix
This means vectors can be used for most operations greatly reducing the amount of memory required and 
providing a modest speed increase. The non_empty_matrix is produced by the 'Prepare_data_for_find_network_balance' function.
}
