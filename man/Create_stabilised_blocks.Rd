% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Create_stabilised_blocks .R
\name{Create_stabilised_blocks}
\alias{Create_stabilised_blocks}
\title{Create stabilised blocks}
\usage{
Create_stabilised_blocks(
  g,
  OriginBlock,
  OriginBlock_number,
  force = "force",
  edge_name = "edge_name",
  k = "k",
  tstep = 0.1,
  tol = 1e-10,
  distance,
  max_iter,
  mass,
  sparse,
  sample = 100,
  static_limit = NULL,
  hyper_iters = 100,
  hyper_tol = 0.01,
  hyper_max = 30000,
  drag_max = drag_max,
  tstep_change = tstep_change,
  verbose = FALSE,
  bigraph = bigraph,
  balanced_blocks = balanced_blocks
)
}
\arguments{
\item{g}{An igraph object}

\item{OriginBlock_number}{An integer. this is the origin block chosen from the
create_stable_blocks function. Usually this will be the largest block.}

\item{force}{A character string. This is the node attribute that contains the force the nodes exert on the network.}

\item{edge_name}{A character string. This is the edge attribute that contains the edge_name of the edges.}

\item{tstep}{A numeric. The time interval used to iterate through the network dynamics.}

\item{tol}{A numeric. The tolerance factor for early stopping.}

\item{distance}{A character string. The edge attribute that contains the original/horizontal distance between nodes.}

\item{max_iter}{An integer. The maximum number of iterations before stopping. Larger networks usually need more iterations.}

\item{mass}{A numeric. This is the mass constant of the nodes in normalised networks this is set to 1.}

\item{sparse}{Logical. Whether or not the function should be run using sparse matrices. must match the actual matrix, this could prob be automated}

\item{static_limit}{Numeric. The maximum value the static force can reach before the algorithm terminates early. This
prevents calculation in a diverging system. The value should be set to some multiple greater than one of the force in the system.
If left blank the static limit is twice the system absolute mean force.}

\item{hyper_iters}{integer. The hyper parameter that determines the number of iterations allowed to find an acceptable convergence value.}

\item{hyper_tol}{numeric. The convergence tolerance when trying to find the minimum value}

\item{hyper_max}{integer. The maximum number of iterations that the setse will go through whilst searching for the minimum.}

\item{drag_max}{integer. A power of ten. if the drag exceeds this value the tstep is reduced}

\item{tstep_change}{numeric. A value between 0 and 1 that determines how much the time step will be reduced by default value is 0.5}

\item{verbose}{Logical. This value sets whether messages generated during the process are supressed or not.}

\item{Origin}{block}
}
\value{
A dataframe with the height embeddings of the network
}
\description{
decomposes the network into bi-connected components using articulation points. This speeds up the convergence process
and reduces the chances of the SETS algorithm diverging on certain classes of network. This function is rarely called
directly and is usually called by SETSe_bicomp
}
\seealso{
\code{\link{SETSe_bicomp}} \code{\link{SETSe}}
}
